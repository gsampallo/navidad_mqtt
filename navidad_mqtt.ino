#include <ESP8266WiFi.h>
#include <PubSubClient.h>



const char* ssid = "linksys";
const char* password = "perromateo";
const char* mqtt_server = "144.217.165.119";

const char* keyDevice = "NAVIDAD2";

int ledpin = 6; //D7 (gpio13);
int ledpin2 = 7; // D8 (gpio15)

int button = 18; //D0(gpio0)
int resetPin = D3; //D3(gpio0)
int buttonState=0;

int tonePin = D8; //D8(gpio15)


WiFiClient espClient;
PubSubClient client(espClient);
long lastMsg = 0;
char msg[50];
int value = 0;

void setup() {
  pinMode(ledpin, OUTPUT);
  pinMode(ledpin2, OUTPUT);
  pinMode(button, INPUT);
  pinMode(resetPin, INPUT);
  pinMode(tonePin,OUTPUT);
  buttonState= LOW;
  
  digitalWrite(ledpin,HIGH);
  digitalWrite(ledpin2,HIGH);
  
  setup_wifi();
  client.setServer(mqtt_server, 1883);
  client.setCallback(callback);  

}

void setup_wifi() {

  delay(10);
  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
  }
}

void navidad() {

    tone(tonePin, 293, 249.9993);
    delay(277.777);
    tone(tonePin, 493, 249.9993);
    delay(277.777);
    tone(tonePin, 440, 249.9993);
    delay(277.777);
    tone(tonePin, 391, 249.9993);
    delay(277.777);
    tone(tonePin, 293, 749.9979);
    delay(833.331);
    tone(tonePin, 293, 124.99965);
    delay(138.8885);
    tone(tonePin, 293, 124.99965);
    delay(138.8885);
    tone(tonePin, 293, 249.9993);
    delay(277.777);
    tone(tonePin, 493, 249.9993);
    delay(277.777);
    tone(tonePin, 440, 249.9993);
    delay(277.777);
    tone(tonePin, 391, 249.9993);
    delay(277.777);
    tone(tonePin, 329, 999.9972);
    delay(1111.108);
    tone(tonePin, 329, 249.9993);
    delay(277.777);
    tone(tonePin, 523, 249.9993);
    delay(277.777);
    tone(tonePin, 493, 249.9993);
    delay(277.777);
    tone(tonePin, 440, 249.9993);
    delay(277.777);
    tone(tonePin, 369, 999.9972);
    delay(1111.108);
    tone(tonePin, 587, 249.9993);
    delay(277.777);
    tone(tonePin, 587, 249.9993);
    delay(277.777);
    tone(tonePin, 523, 249.9993);
    delay(277.777);
    tone(tonePin, 440, 249.9993);
    delay(277.777);
    tone(tonePin, 493, 999.9972);
    delay(1111.108);
    tone(tonePin, 293, 249.9993);
    delay(277.777);
    tone(tonePin, 493, 249.9993);
    delay(277.777);
    tone(tonePin, 440, 249.9993);
    delay(277.777);
    tone(tonePin, 391, 249.9993);
    delay(277.777);
    tone(tonePin, 293, 999.9972);
    delay(1111.108);
    tone(tonePin, 293, 249.9993);
    delay(277.777);
    tone(tonePin, 493, 249.9993);
    delay(277.777);
    tone(tonePin, 440, 249.9993);
    delay(277.777);
    tone(tonePin, 391, 249.9993);
    delay(277.777);
    tone(tonePin, 329, 749.9979);
    delay(833.331);
    tone(tonePin, 329, 249.9993);
    delay(277.777);
    tone(tonePin, 329, 249.9993);
    delay(277.777);
    tone(tonePin, 523, 249.9993);
    delay(277.777);
    tone(tonePin, 493, 249.9993);
    delay(277.777);
    tone(tonePin, 440, 249.9993);
    delay(277.777);
    tone(tonePin, 587, 249.9993);
    delay(277.777);
    tone(tonePin, 587, 249.9993);
    delay(277.777);
    tone(tonePin, 587, 249.9993);
    delay(277.777);
    tone(tonePin, 587, 249.9993);
    delay(277.777);
    tone(tonePin, 659, 249.9993);
    delay(277.777);
    tone(tonePin, 587, 249.9993);
    delay(277.777);
    tone(tonePin, 523, 249.9993);
    delay(277.777);
    tone(tonePin, 440, 249.9993);
    delay(277.777);
    tone(tonePin, 391, 749.9979);
    delay(833.331);
    delay(277.777);
    tone(tonePin, 493, 249.9993);
    delay(277.777);
    tone(tonePin, 493, 249.9993);
    delay(277.777);
    tone(tonePin, 493, 499.9986);
    delay(555.554);
    tone(tonePin, 493, 249.9993);
    delay(277.777);
    tone(tonePin, 493, 249.9993);
    delay(277.777);
    tone(tonePin, 493, 499.9986);
    delay(555.554);
    tone(tonePin, 493, 249.9993);
    delay(277.777);
    tone(tonePin, 587, 249.9993);
    delay(277.777);
    tone(tonePin, 391, 374.99895);
    delay(416.6655);
    tone(tonePin, 440, 124.99965);
    delay(138.8885);
    tone(tonePin, 493, 999.9972);
    delay(1111.108);
    tone(tonePin, 523, 249.9993);
    delay(277.777);
    tone(tonePin, 523, 249.9993);
    delay(277.777);
    tone(tonePin, 523, 374.99895);
    delay(416.6655);
    tone(tonePin, 523, 124.99965);
    delay(138.8885);
    tone(tonePin, 523, 249.9993);
    delay(277.777);
    tone(tonePin, 493, 249.9993);
    delay(277.777);
    tone(tonePin, 493, 249.9993);
    delay(277.777);
    tone(tonePin, 493, 124.99965);
    delay(138.8885);
    tone(tonePin, 493, 124.99965);
    delay(138.8885);
    tone(tonePin, 493, 249.9993);
    delay(277.777);
    tone(tonePin, 440, 249.9993);
    delay(277.777);
    tone(tonePin, 440, 249.9993);
    delay(277.777);
    tone(tonePin, 493, 249.9993);
    delay(277.777);
    tone(tonePin, 440, 499.9986);
    delay(555.554);
    tone(tonePin, 587, 499.9986);
    delay(555.554);
    tone(tonePin, 493, 249.9993);
    delay(277.777);
    tone(tonePin, 493, 249.9993);
    delay(277.777);
    tone(tonePin, 493, 499.9986);
    delay(555.554);
    tone(tonePin, 493, 249.9993);
    delay(277.777);
    tone(tonePin, 493, 249.9993);
    delay(277.777);
    tone(tonePin, 493, 499.9986);
    delay(555.554);
    tone(tonePin, 493, 249.9993);
    delay(277.777);
    tone(tonePin, 587, 249.9993);
    delay(277.777);
    tone(tonePin, 391, 374.99895);
    delay(416.6655);
    tone(tonePin, 440, 124.99965);
    delay(138.8885);
    tone(tonePin, 493, 999.9972);
    delay(1111.108);
    tone(tonePin, 523, 249.9993);
    delay(277.777);
    tone(tonePin, 523, 249.9993);
    delay(277.777);
    tone(tonePin, 523, 374.99895);
    delay(416.6655);
    tone(tonePin, 523, 124.99965);
    delay(138.8885);
    tone(tonePin, 523, 249.9993);
    delay(277.777);
    tone(tonePin, 493, 249.9993);
    delay(277.777);
    tone(tonePin, 493, 249.9993);
    delay(277.777);
    tone(tonePin, 493, 124.99965);
    delay(138.8885);
    tone(tonePin, 493, 124.99965);
    delay(138.8885);
    tone(tonePin, 587, 249.9993);
    delay(277.777);
    tone(tonePin, 587, 249.9993);
    delay(277.777);
    tone(tonePin, 523, 249.9993);
    delay(277.777);
    tone(tonePin, 440, 249.9993);
    delay(277.777);
    tone(tonePin, 391, 249.9993);
    delay(277.777);
    tone(tonePin, 587, 249.9993);
    delay(277.777);
    tone(tonePin, 783, 249.9993);
    delay(277.777);
    delay(277.777);
    tone(tonePin, 293, 249.9993);
    delay(277.777);
    tone(tonePin, 493, 249.9993);
    delay(277.777);
    tone(tonePin, 440, 249.9993);
    delay(277.777);
    tone(tonePin, 391, 249.9993);
    delay(277.777);
    tone(tonePin, 293, 749.9979);
    delay(833.331);
    tone(tonePin, 293, 124.99965);
    delay(138.8885);
    tone(tonePin, 293, 124.99965);
    delay(138.8885);
    tone(tonePin, 293, 249.9993);
    delay(277.777);
    tone(tonePin, 493, 249.9993);
    delay(277.777);
    tone(tonePin, 440, 249.9993);
    delay(277.777);
    tone(tonePin, 391, 249.9993);
    delay(277.777);
    tone(tonePin, 329, 999.9972);
    delay(1111.108);
    tone(tonePin, 329, 249.9993);
    delay(277.777);
    tone(tonePin, 523, 249.9993);
    delay(277.777);
    tone(tonePin, 493, 249.9993);
    delay(277.777);
    tone(tonePin, 440, 249.9993);
    delay(277.777);
    tone(tonePin, 369, 999.9972);
    delay(1111.108);
    tone(tonePin, 587, 249.9993);
    delay(277.777);
    tone(tonePin, 587, 249.9993);
    delay(277.777);
    tone(tonePin, 523, 249.9993);
    delay(277.777);
    tone(tonePin, 440, 249.9993);
    delay(277.777);
    tone(tonePin, 493, 999.9972);
    delay(1111.108);
    tone(tonePin, 293, 249.9993);
    delay(277.777);
    tone(tonePin, 493, 249.9993);
    delay(277.777);
    tone(tonePin, 440, 249.9993);
    delay(277.777);
    tone(tonePin, 391, 249.9993);
    delay(277.777);
    tone(tonePin, 293, 999.9972);
    delay(1111.108);
    tone(tonePin, 293, 249.9993);
    delay(277.777);
    tone(tonePin, 493, 249.9993);
    delay(277.777);
    tone(tonePin, 440, 249.9993);
    delay(277.777);
    tone(tonePin, 391, 249.9993);
    delay(277.777);
    tone(tonePin, 329, 749.9979);
    delay(833.331);
    tone(tonePin, 329, 249.9993);
    delay(277.777);
    tone(tonePin, 329, 249.9993);
    delay(277.777);
    tone(tonePin, 523, 249.9993);
    delay(277.777);
    tone(tonePin, 493, 249.9993);
    delay(277.777);
    tone(tonePin, 440, 249.9993);
    delay(277.777);
    tone(tonePin, 587, 249.9993);
    delay(277.777);
    tone(tonePin, 587, 249.9993);
    delay(277.777);
    tone(tonePin, 587, 249.9993);
    delay(277.777);
    tone(tonePin, 587, 249.9993);
    delay(277.777);
    tone(tonePin, 659, 249.9993);
    delay(277.777);
    tone(tonePin, 587, 249.9993);
    delay(277.777);
    tone(tonePin, 523, 249.9993);
    delay(277.777);
    tone(tonePin, 440, 249.9993);
    delay(277.777);
    tone(tonePin, 391, 749.9979);
    delay(833.331);
    delay(277.777);
    tone(tonePin, 493, 249.9993);
    delay(277.777);
    tone(tonePin, 493, 249.9993);
    delay(277.777);
    tone(tonePin, 493, 499.9986);
    delay(555.554);
    tone(tonePin, 493, 249.9993);
    delay(277.777);
    tone(tonePin, 493, 249.9993);
    delay(277.777);
    tone(tonePin, 493, 499.9986);
    delay(555.554);
    tone(tonePin, 493, 249.9993);
    delay(277.777);
    tone(tonePin, 587, 249.9993);
    delay(277.777);
    tone(tonePin, 391, 374.99895);
    delay(416.6655);
    tone(tonePin, 440, 124.99965);
    delay(138.8885);
    tone(tonePin, 493, 999.9972);
    delay(1111.108);
    tone(tonePin, 523, 249.9993);
    delay(277.777);
    tone(tonePin, 523, 249.9993);
    delay(277.777);
    tone(tonePin, 523, 374.99895);
    delay(416.6655);
    tone(tonePin, 523, 124.99965);
    delay(138.8885);
    tone(tonePin, 523, 249.9993);
    delay(277.777);
    tone(tonePin, 493, 249.9993);
    delay(277.777);
    tone(tonePin, 493, 249.9993);
    delay(277.777);
    tone(tonePin, 493, 124.99965);
    delay(138.8885);
    tone(tonePin, 493, 124.99965);
    delay(138.8885);
    tone(tonePin, 493, 249.9993);
    delay(277.777);
    tone(tonePin, 440, 249.9993);
    delay(277.777);
    tone(tonePin, 440, 249.9993);
    delay(277.777);
    tone(tonePin, 493, 249.9993);
    delay(277.777);
    tone(tonePin, 440, 499.9986);
    delay(555.554);
    tone(tonePin, 587, 499.9986);
    delay(555.554);
    tone(tonePin, 493, 249.9993);
    delay(277.777);
    tone(tonePin, 493, 249.9993);
    delay(277.777);
    tone(tonePin, 493, 499.9986);
    delay(555.554);
    tone(tonePin, 493, 249.9993);
    delay(277.777);
    tone(tonePin, 493, 249.9993);
    delay(277.777);
    tone(tonePin, 493, 499.9986);
    delay(555.554);
    tone(tonePin, 493, 249.9993);
    delay(277.777);
    tone(tonePin, 587, 249.9993);
    delay(277.777);
    tone(tonePin, 391, 374.99895);
    delay(416.6655);
    tone(tonePin, 440, 124.99965);
    delay(138.8885);
    tone(tonePin, 493, 999.9972);
    delay(1111.108);
    tone(tonePin, 523, 249.9993);
    delay(277.777);
    tone(tonePin, 523, 249.9993);
    delay(277.777);
    tone(tonePin, 523, 374.99895);
    delay(416.6655);
    tone(tonePin, 523, 124.99965);
    delay(138.8885);
    tone(tonePin, 523, 249.9993);
    delay(277.777);
    tone(tonePin, 493, 249.9993);
    delay(277.777);
    tone(tonePin, 493, 249.9993);
    delay(277.777);
    tone(tonePin, 493, 124.99965);
    delay(138.8885);
    tone(tonePin, 493, 124.99965);
    delay(138.8885);
    tone(tonePin, 587, 249.9993);
    delay(277.777);
    tone(tonePin, 587, 249.9993);
    delay(277.777);
    tone(tonePin, 523, 249.9993);
    delay(277.777);
    tone(tonePin, 440, 249.9993);
    delay(277.777);
    tone(tonePin, 391, 249.9993);
    delay(277.777);
    tone(tonePin, 587, 249.9993);
    delay(277.777);
    tone(tonePin, 783, 249.9993);
    delay(277.777);

}

void navidad1() {

    tone(tonePin, 311, 374.9994);
    delay(416.666);
    tone(tonePin, 415, 374.9994);
    delay(416.666);
    tone(tonePin, 415, 187.4997);
    delay(208.333);
    tone(tonePin, 466, 187.4997);
    delay(208.333);
    tone(tonePin, 415, 187.4997);
    delay(208.333);
    tone(tonePin, 391, 187.4997);
    delay(208.333);
    tone(tonePin, 349, 374.9994);
    delay(416.666);
    tone(tonePin, 349, 281.24955);
    delay(312.4995);
    delay(104.1665);
    tone(tonePin, 349, 374.9994);
    delay(416.666);
    tone(tonePin, 466, 374.9994);
    delay(416.666);
    tone(tonePin, 466, 187.4997);
    delay(208.333);
    tone(tonePin, 523, 187.4997);
    delay(208.333);
    tone(tonePin, 466, 187.4997);
    delay(208.333);
    tone(tonePin, 415, 187.4997);
    delay(208.333);
    tone(tonePin, 391, 374.9994);
    delay(416.666);
    tone(tonePin, 311, 281.24955);
    delay(312.4995);
    delay(104.1665);
    tone(tonePin, 311, 374.9994);
    delay(416.666);
    tone(tonePin, 523, 374.9994);
    delay(416.666);
    tone(tonePin, 523, 187.4997);
    delay(208.333);
    tone(tonePin, 554, 187.4997);
    delay(208.333);
    tone(tonePin, 523, 187.4997);
    delay(208.333);
    tone(tonePin, 466, 187.4997);
    delay(208.333);
    tone(tonePin, 415, 374.9994);
    delay(416.666);
    tone(tonePin, 349, 281.24955);
    delay(312.4995);
    delay(104.1665);
    tone(tonePin, 311, 187.4997);
    delay(208.333);
    tone(tonePin, 311, 187.4997);
    delay(208.333);
    tone(tonePin, 349, 281.24955);
    delay(312.4995);
    delay(104.1665);
    tone(tonePin, 466, 281.24955);
    delay(312.4995);
    delay(104.1665);
    tone(tonePin, 391, 281.24955);
    delay(312.4995);
    delay(104.1665);
    tone(tonePin, 415, 656.24895);
    delay(729.1655);
    delay(104.1665);
    tone(tonePin, 311, 374.9994);
    delay(416.666);
    tone(tonePin, 415, 374.9994);
    delay(416.666);
    tone(tonePin, 415, 187.4997);
    delay(208.333);
    tone(tonePin, 466, 187.4997);
    delay(208.333);
    tone(tonePin, 415, 187.4997);
    delay(208.333);
    tone(tonePin, 391, 187.4997);
    delay(208.333);
    tone(tonePin, 349, 374.9994);
    delay(416.666);
    tone(tonePin, 349, 281.24955);
    delay(312.4995);
    delay(104.1665);
    tone(tonePin, 349, 374.9994);
    delay(416.666);
    tone(tonePin, 466, 374.9994);
    delay(416.666);
    tone(tonePin, 466, 187.4997);
    delay(208.333);
    tone(tonePin, 523, 187.4997);
    delay(208.333);
    tone(tonePin, 466, 187.4997);
    delay(208.333);
    tone(tonePin, 415, 187.4997);
    delay(208.333);
    tone(tonePin, 391, 374.9994);
    delay(416.666);
    tone(tonePin, 311, 281.24955);
    delay(312.4995);
    delay(104.1665);
    tone(tonePin, 311, 374.9994);
    delay(416.666);
    tone(tonePin, 523, 374.9994);
    delay(416.666);
    tone(tonePin, 523, 187.4997);
    delay(208.333);
    tone(tonePin, 554, 187.4997);
    delay(208.333);
    tone(tonePin, 523, 187.4997);
    delay(208.333);
    tone(tonePin, 466, 187.4997);
    delay(208.333);
    tone(tonePin, 415, 374.9994);
    delay(416.666);
    tone(tonePin, 349, 281.24955);
    delay(312.4995);
    delay(104.1665);
    tone(tonePin, 311, 187.4997);
    delay(208.333);
    tone(tonePin, 311, 187.4997);
    delay(208.333);
    tone(tonePin, 349, 281.24955);
    delay(312.4995);
    delay(104.1665);
    tone(tonePin, 466, 281.24955);
    delay(312.4995);
    delay(104.1665);
    tone(tonePin, 391, 281.24955);
    delay(312.4995);
    delay(104.1665);
    tone(tonePin, 415, 656.24895);
    delay(729.1655);
    delay(104.1665);
    tone(tonePin, 311, 374.9994);
    delay(416.666);
    tone(tonePin, 415, 374.9994);
    delay(416.666);
    tone(tonePin, 415, 374.9994);
    delay(416.666);
    tone(tonePin, 415, 374.9994);
    delay(416.666);
    tone(tonePin, 391, 749.9988);
    delay(833.332);
    tone(tonePin, 391, 374.9994);
    delay(416.666);
    tone(tonePin, 415, 374.9994);
    delay(416.666);
    tone(tonePin, 391, 374.9994);
    delay(416.666);
    tone(tonePin, 349, 374.9994);
    delay(416.666);
    tone(tonePin, 311, 656.24895);
    delay(729.1655);
    delay(104.1665);
    tone(tonePin, 466, 374.9994);
    delay(416.666);
    tone(tonePin, 523, 374.9994);
    delay(416.666);
    tone(tonePin, 466, 374.9994);
    delay(416.666);
    tone(tonePin, 415, 374.9994);
    delay(416.666);
    tone(tonePin, 622, 374.9994);
    delay(416.666);
    tone(tonePin, 311, 374.9994);
    delay(416.666);
    tone(tonePin, 311, 187.4997);
    delay(208.333);
    tone(tonePin, 311, 187.4997);
    delay(208.333);
    tone(tonePin, 349, 281.24955);
    delay(312.4995);
    delay(104.1665);
    tone(tonePin, 466, 281.24955);
    delay(312.4995);
    delay(104.1665);
    tone(tonePin, 391, 281.24955);
    delay(312.4995);
    delay(104.1665);
    tone(tonePin, 415, 656.24895);
    delay(729.1655);
    delay(104.1665);
    tone(tonePin, 311, 374.9994);
    delay(416.666);
    tone(tonePin, 415, 374.9994);
    delay(416.666);
    tone(tonePin, 415, 187.4997);
    delay(208.333);
    tone(tonePin, 466, 187.4997);
    delay(208.333);
    tone(tonePin, 415, 187.4997);
    delay(208.333);
    tone(tonePin, 391, 187.4997);
    delay(208.333);
    tone(tonePin, 349, 374.9994);
    delay(416.666);
    tone(tonePin, 349, 281.24955);
    delay(312.4995);
    delay(104.1665);
    tone(tonePin, 349, 374.9994);
    delay(416.666);
    tone(tonePin, 466, 374.9994);
    delay(416.666);
    tone(tonePin, 466, 187.4997);
    delay(208.333);
    tone(tonePin, 523, 187.4997);
    delay(208.333);
    tone(tonePin, 466, 187.4997);
    delay(208.333);
    tone(tonePin, 415, 187.4997);
    delay(208.333);
    tone(tonePin, 391, 374.9994);
    delay(416.666);
    tone(tonePin, 311, 281.24955);
    delay(312.4995);
    delay(104.1665);
    tone(tonePin, 311, 374.9994);
    delay(416.666);
    tone(tonePin, 523, 374.9994);
    delay(416.666);
    tone(tonePin, 523, 187.4997);
    delay(208.333);
    tone(tonePin, 554, 187.4997);
    delay(208.333);
    tone(tonePin, 523, 187.4997);
    delay(208.333);
    tone(tonePin, 466, 187.4997);
    delay(208.333);
    tone(tonePin, 415, 374.9994);
    delay(416.666);
    tone(tonePin, 349, 281.24955);
    delay(312.4995);
    delay(104.1665);
    tone(tonePin, 311, 187.4997);
    delay(208.333);
    tone(tonePin, 311, 187.4997);
    delay(208.333);
    tone(tonePin, 349, 281.24955);
    delay(312.4995);
    delay(104.1665);
    tone(tonePin, 466, 281.24955);
    delay(312.4995);
    delay(104.1665);
    tone(tonePin, 391, 281.24955);
    delay(312.4995);
    delay(104.1665);
    tone(tonePin, 415, 656.24895);
    delay(729.1655);
    delay(104.1665);
    tone(tonePin, 369, 374.9994);
    delay(416.666);
    tone(tonePin, 493, 374.9994);
    delay(416.666);
    tone(tonePin, 493, 187.4997);
    delay(208.333);
    tone(tonePin, 554, 187.4997);
    delay(208.333);
    tone(tonePin, 493, 187.4997);
    delay(208.333);
    tone(tonePin, 466, 187.4997);
    delay(208.333);
    tone(tonePin, 415, 374.9994);
    delay(416.666);
    tone(tonePin, 415, 281.24955);
    delay(312.4995);
    delay(104.1665);
    tone(tonePin, 415, 374.9994);
    delay(416.666);
    tone(tonePin, 554, 374.9994);
    delay(416.666);
    tone(tonePin, 554, 187.4997);
    delay(208.333);
    tone(tonePin, 622, 187.4997);
    delay(208.333);
    tone(tonePin, 554, 187.4997);
    delay(208.333);
    tone(tonePin, 493, 187.4997);
    delay(208.333);
    tone(tonePin, 466, 374.9994);
    delay(416.666);
    tone(tonePin, 369, 281.24955);
    delay(312.4995);
    delay(104.1665);
    tone(tonePin, 369, 374.9994);
    delay(416.666);
    tone(tonePin, 622, 374.9994);
    delay(416.666);
    tone(tonePin, 622, 187.4997);
    delay(208.333);
    tone(tonePin, 659, 187.4997);
    delay(208.333);
    tone(tonePin, 622, 187.4997);
    delay(208.333);
    tone(tonePin, 554, 187.4997);
    delay(208.333);
    tone(tonePin, 493, 374.9994);
    delay(416.666);
    tone(tonePin, 415, 281.24955);
    delay(312.4995);
    delay(104.1665);
    tone(tonePin, 369, 187.4997);
    delay(208.333);
    tone(tonePin, 369, 187.4997);
    delay(208.333);
    tone(tonePin, 415, 281.24955);
    delay(312.4995);
    delay(104.1665);
    tone(tonePin, 554, 281.24955);
    delay(312.4995);
    delay(104.1665);
    tone(tonePin, 466, 281.24955);
    delay(312.4995);
    delay(104.1665);
    tone(tonePin, 493, 656.24895);
    delay(729.1655);

}

void navidad2() {

    tone(tonePin, 587, 450.0);
    delay(500.0);
    tone(tonePin, 554, 337.5);
    delay(375.0);
    tone(tonePin, 493, 112.5);
    delay(125.0);
    tone(tonePin, 440, 675.0);
    delay(750.0);
    tone(tonePin, 391, 225.0);
    delay(250.0);
    tone(tonePin, 369, 450.0);
    delay(500.0);
    tone(tonePin, 329, 450.0);
    delay(500.0);
    tone(tonePin, 293, 675.0);
    delay(750.0);
    tone(tonePin, 440, 225.0);
    delay(250.0);
    tone(tonePin, 493, 670.3125);
    delay(744.791666667);
    delay(5.20833333333);
    tone(tonePin, 493, 225.0);
    delay(250.0);
    tone(tonePin, 554, 670.3125);
    delay(744.791666667);
    delay(5.20833333333);
    tone(tonePin, 554, 225.0);
    delay(250.0);
    tone(tonePin, 587, 670.3125);
    delay(744.791666667);
    delay(5.20833333333);
    tone(tonePin, 587, 220.3125);
    delay(244.791666667);
    delay(5.20833333333);
    tone(tonePin, 587, 225.0);
    delay(250.0);
    tone(tonePin, 554, 225.0);
    delay(250.0);
    tone(tonePin, 493, 225.0);
    delay(250.0);
    tone(tonePin, 440, 220.3125);
    delay(244.791666667);
    delay(5.20833333333);
    tone(tonePin, 440, 337.5);
    delay(375.0);
    tone(tonePin, 391, 112.5);
    delay(125.0);
    tone(tonePin, 369, 225.0);
    delay(250.0);
    tone(tonePin, 587, 220.3125);
    delay(244.791666667);
    delay(5.20833333333);
    tone(tonePin, 587, 225.0);
    delay(250.0);
    tone(tonePin, 554, 225.0);
    delay(250.0);
    tone(tonePin, 493, 225.0);
    delay(250.0);
    tone(tonePin, 440, 220.3125);
    delay(244.791666667);
    delay(5.20833333333);
    tone(tonePin, 440, 337.5);
    delay(375.0);
    tone(tonePin, 391, 112.5);
    delay(125.0);
    tone(tonePin, 369, 220.3125);
    delay(244.791666667);
    delay(5.20833333333);
    tone(tonePin, 369, 220.3125);
    delay(244.791666667);
    delay(5.20833333333);
    tone(tonePin, 369, 220.3125);
    delay(244.791666667);
    delay(5.20833333333);
    tone(tonePin, 369, 220.3125);
    delay(244.791666667);
    delay(5.20833333333);
    tone(tonePin, 369, 220.3125);
    delay(244.791666667);
    delay(5.20833333333);
    tone(tonePin, 369, 112.5);
    delay(125.0);
    tone(tonePin, 391, 112.5);
    delay(125.0);
    tone(tonePin, 440, 675.0);
    delay(750.0);
    tone(tonePin, 391, 112.5);
    delay(125.0);
    tone(tonePin, 369, 112.5);
    delay(125.0);
    tone(tonePin, 329, 220.3125);
    delay(244.791666667);
    delay(5.20833333333);
    tone(tonePin, 329, 220.3125);
    delay(244.791666667);
    delay(5.20833333333);
    tone(tonePin, 329, 220.3125);
    delay(244.791666667);
    delay(5.20833333333);
    tone(tonePin, 329, 112.5);
    delay(125.0);
    tone(tonePin, 369, 112.5);
    delay(125.0);
    tone(tonePin, 391, 675.0);
    delay(750.0);
    tone(tonePin, 369, 112.5);
    delay(125.0);
    tone(tonePin, 329, 112.5);
    delay(125.0);
    tone(tonePin, 293, 225.0);
    delay(250.0);
    tone(tonePin, 587, 450.0);
    delay(500.0);
    tone(tonePin, 493, 225.0);
    delay(250.0);
    tone(tonePin, 440, 337.5);
    delay(375.0);
    tone(tonePin, 391, 112.5);
    delay(125.0);
    tone(tonePin, 369, 225.0);
    delay(250.0);
    tone(tonePin, 391, 225.0);
    delay(250.0);
    tone(tonePin, 369, 450.0);
    delay(500.0);
    tone(tonePin, 329, 450.0);
    delay(500.0);

}

void notificar1() {
  digitalWrite(ledpin,LOW);
  digitalWrite(ledpin2,LOW);
  navidad1();
  digitalWrite(ledpin,HIGH);
  digitalWrite(ledpin2,HIGH);
}

void notificar2() {
  digitalWrite(ledpin,LOW);
  digitalWrite(ledpin2,LOW);
  navidad2();
  digitalWrite(ledpin,HIGH);
  digitalWrite(ledpin2,HIGH);
}

void notificar3() {
  digitalWrite(ledpin,LOW);
  digitalWrite(ledpin2,LOW);
  navidad();
  digitalWrite(ledpin,HIGH);
  digitalWrite(ledpin2,HIGH);
}

void callback(char* topic, byte* payload, unsigned int length) {
  //String topico = String(topic);
  if (((char)payload[0] == '1')) {
    notificar1();
  } else if ((char)payload[0] == '2') {
    notificar2();
  } else if ((char)payload[0] == '3') {
    notificar3();
  }
  
  

}

boolean notificando = false;

void reconnect() {

  while (!client.connected()) {

    if (client.connect(keyDevice,"guillermo","Moscardon01")) {

      //client.publish("casa", keyDevice);

      client.subscribe("SALUDAR");
    } else {
      delay(5000);
    }
  }
}

void loop() {
  if (!client.connected()) {
    reconnect();
    delay(5000);
    //client.publish("casa", keyDevice);
  } 
  
  client.loop();

  if(digitalRead(button) == HIGH) {
    
      //notificando = true;
      notificar1();
      //notificando = false;
    
  }

}



